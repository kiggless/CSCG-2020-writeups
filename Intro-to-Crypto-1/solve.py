#!/usr/bin/env python3

from Crypto.Util.number import long_to_bytes
from Crypto.Util.number import inverse

N = 10327849034940138613515485956077213322791085874638285662823764630659653931824178919168344401508423966366637831067655701114352106747323628144645384205073278784870804834942988268503504130770762781798270763453272421050209487483563600870343875197428105079394315585993355808937811229959083289653056248770988647762812998870912510238393368777882358059256678052653963583286245796285737035786447522814310717433588049686223718247661713594680120785280795132759253149754143640871380226770164628599577669124463514838464342769690232097283333816896581904763736283142031118073027496197756777460403007359764250621763279762041468943079
e = 65537

for q in range(2,1000000):

    if N % q == 0:
        break

p = N // q
d = inverse(e, (p - 1) * (q - 1))
m = int(open("message.txt", "r").read().strip())

decrypted = pow(m, d, N)

print(long_to_bytes(decrypted).decode("utf-8"))
